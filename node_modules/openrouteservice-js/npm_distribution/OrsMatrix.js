'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _superagent = require('superagent');

var _superagent2 = _interopRequireDefault(_superagent);

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _OrsUtil = require('./OrsUtil');

var _OrsUtil2 = _interopRequireDefault(_OrsUtil);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var orsUtil = new _OrsUtil2.default();

var OrsMatrix = function () {
  function OrsMatrix(args) {
    _classCallCheck(this, OrsMatrix);

    this.meta = null;
    this.args = {};
    if ('api_key' in args) {
      this.args.api_key = args.api_key;
    } else {
      // eslint-disable-next-line no-console
      console.log('Please add your openrouteservice api_key..');
    }
  }

  _createClass(OrsMatrix, [{
    key: 'calculate',
    value: function calculate(reqArgs) {
      if (!reqArgs.service) {
        reqArgs.service = 'matrix';
      }
      if (!reqArgs.host) {
        reqArgs.host = 'https://api.openrouteservice.org';
      }
      if (!reqArgs.api_version) {
        reqArgs.api_version = 'v2';
      }

      orsUtil.copyProperties(reqArgs, this.args);
      var that = this;

      return new _bluebird2.default(function (resolve, reject) {
        var timeout = 10000;

        if (that.args.api_version === 'v2') {
          if (that.meta == null) {
            that.meta = orsUtil.prepareMeta(that.args);
          }
          that.httpArgs = orsUtil.prepareRequest(that.args);

          var url = orsUtil.prepareUrl(that.meta);

          _superagent2.default.post(url).send(that.httpArgs).set('Authorization', that.meta.apiKey)
          // .set('Content-Type', that.meta.mimeType)
          // .accept('application/json')
          .timeout(timeout).end(function (err, res) {
            if (err || !res.ok) {
              reject(err);
            } else if (res) {
              resolve(res.body);
            }
          });
        } else {
          // eslint-disable-next-line no-console
          console.error('Please use ORS API v2');
        }
      });
    }
  }]);

  return OrsMatrix;
}();

exports.default = OrsMatrix;